{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/austin/dev/fish-maps/ui/components/Map.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { addCount } from \"../store/count/action\";\nimport { GoogleMap, LoadScript } from \"@react-google-maps/api\";\nvar containerStyle = {\n  width: \"400px\",\n  height: \"400px\"\n};\nvar center = {\n  lat: -3.745,\n  lng: -38.523\n};\n\nvar onLoad = function onLoad(map) {\n  var bounds = new window.google.maps.LatLngBounds();\n  map.fitBounds(bounds);\n};\n\nvar position = {\n  lat: 33.772,\n  lng: -117.214\n};\n\nvar onUnmount = function onUnmount(map) {};\n\nexport var Map = /*#__PURE__*/function (_React$Component) {\n  _inherits(Map, _React$Component);\n\n  var _super = _createSuper(Map);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"GetMarkers\", function () {});\n\n    _this.state = {\n      markers: []\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(LoadScript, {\n        googleMapsApiKey: \"AIzaSyAzNAcbkbNofJb40BYJ75D1WnYtQ_LbZr4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 4\n        }\n      }, __jsx(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: position,\n        zoom: 10,\n        onLoad: onLoad,\n        onUnmount: onUnmount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }\n      }));\n    }\n  }]);\n\n  return Map;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addCount: bindActionCreators(addCount, dispatch)\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Map);","map":{"version":3,"sources":["/Users/austin/dev/fish-maps/ui/components/Map.tsx"],"names":["React","connect","bindActionCreators","addCount","GoogleMap","LoadScript","containerStyle","width","height","center","lat","lng","onLoad","map","bounds","window","google","maps","LatLngBounds","fitBounds","position","onUnmount","Map","props","state","markers","Component","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,wBAAtC;AAEA,IAAMC,cAAc,GAAG;AACtBC,EAAAA,KAAK,EAAE,OADe;AAEtBC,EAAAA,MAAM,EAAE;AAFc,CAAvB;AAKA,IAAMC,MAAM,GAAG;AACdC,EAAAA,GAAG,EAAE,CAAC,KADQ;AAEdC,EAAAA,GAAG,EAAE,CAAC;AAFQ,CAAf;;AAKA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAS;AACvB,MAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,YAAvB,EAAf;AACAL,EAAAA,GAAG,CAACM,SAAJ,CAAcL,MAAd;AACA,CAHD;;AAKA,IAAMM,QAAQ,GAAG;AAAEV,EAAAA,GAAG,EAAE,MAAP;AAAeC,EAAAA,GAAG,EAAE,CAAC;AAArB,CAAjB;;AAEA,IAAMU,SAAS,GAAG,SAAZA,SAAY,CAACR,GAAD,EAAS,CAAE,CAA7B;;AAEA,WAAaS,GAAb;AAAA;;AAAA;;AACC,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;;AADkB,iEAQN,YAAM,CAElB,CAVkB;;AAGlB,UAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE;AADG,KAAb;AAHkB;AAMlB;;AAPF;AAAA;AAAA,6BAaU;AACR,aACC,MAAC,UAAD;AAAY,QAAA,gBAAgB,EAAC,yCAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,SAAD;AACC,QAAA,iBAAiB,EAAEnB,cADpB;AAEC,QAAA,MAAM,EAAEc,QAFT;AAGC,QAAA,IAAI,EAAE,EAHP;AAIC,QAAA,MAAM,EAAER,MAJT;AAKC,QAAA,SAAS,EAAES,SALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD;AAaA;AA3BF;;AAAA;AAAA,EAAyBrB,KAAK,CAAC0B,SAA/B;;AA8BA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACxC,SAAO;AACNzB,IAAAA,QAAQ,EAAED,kBAAkB,CAACC,QAAD,EAAWyB,QAAX;AADtB,GAAP;AAGA,CAJD;;AAMA,eAAe3B,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkCL,GAAlC,CAAf","sourcesContent":["declare global {\n\tinterface Window {\n\t\tgoogle: any\n\t}\n}\n\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from \"redux\"\nimport { Marker } from \"@react-google-maps/api\"\nimport { addCount } from \"../store/count/action\"\nimport { GoogleMap, LoadScript } from \"@react-google-maps/api\"\n\nconst containerStyle = {\n\twidth: \"400px\",\n\theight: \"400px\",\n}\n\nconst center = {\n\tlat: -3.745,\n\tlng: -38.523,\n}\n\nconst onLoad = (map) => {\n\tconst bounds = new window.google.maps.LatLngBounds()\n\tmap.fitBounds(bounds)\n}\n\nconst position = { lat: 33.772, lng: -117.214 }\n\nconst onUnmount = (map) => {}\n\nexport class Map extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tmarkers: []\n\t\t}\n\t}\n\n\tGetMarkers = () => {\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<LoadScript googleMapsApiKey=\"AIzaSyAzNAcbkbNofJb40BYJ75D1WnYtQ_LbZr4\">\n\t\t\t\t<GoogleMap\n\t\t\t\t\tmapContainerStyle={containerStyle}\n\t\t\t\t\tcenter={position}\n\t\t\t\t\tzoom={10}\n\t\t\t\t\tonLoad={onLoad}\n\t\t\t\t\tonUnmount={onUnmount}\n\t\t\t\t>\n\t\t\t\t\t\n\t\t\t\t</GoogleMap>\n\t\t\t</LoadScript>\n\t\t)\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\taddCount: bindActionCreators(addCount, dispatch),\n\t}\n}\n\nexport default connect(null, mapDispatchToProps)(Map)\n"]},"metadata":{},"sourceType":"module"}