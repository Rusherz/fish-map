{"ast":null,"code":"var _jsxFileName = \"/Users/austin/dev/fish-maps/ui/components/Map.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { addCount } from \"../store/count/action\";\nimport { GoogleMap, LoadScript } from \"@react-google-maps/api\";\nconst containerStyle = {\n  width: \"400px\",\n  height: \"400px\"\n};\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\nconst [map, setMap] = React.useState(null);\n\nconst onLoad = map => {\n  const bounds = new window.google.maps.LatLngBounds();\n  map.fitBounds(bounds);\n  setMap(map);\n};\n\nconst onUnmount = map => {\n  setMap(null);\n};\n\nexport class Map extends React.Component {\n  render() {\n    return __jsx(LoadScript, {\n      googleMapsApiKey: \"AIzaSyAzNAcbkbNofJb40BYJ75D1WnYtQ_LbZr4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 4\n      }\n    }, __jsx(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 10,\n      onLoad: onLoad,\n      onUnmount: onUnmount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }, __jsx(React.Fragment, null)));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addCount: bindActionCreators(addCount, dispatch)\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Map);","map":{"version":3,"sources":["/Users/austin/dev/fish-maps/ui/components/Map.tsx"],"names":["React","connect","bindActionCreators","addCount","GoogleMap","LoadScript","containerStyle","width","height","center","lat","lng","map","setMap","useState","onLoad","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","Map","Component","render","mapDispatchToProps","dispatch"],"mappings":";;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,wBAAtC;AAEA,MAAMC,cAAc,GAAG;AACtBC,EAAAA,KAAK,EAAE,OADe;AAEtBC,EAAAA,MAAM,EAAE;AAFc,CAAvB;AAKA,MAAMC,MAAM,GAAG;AACdC,EAAAA,GAAG,EAAE,CAAC,KADQ;AAEdC,EAAAA,GAAG,EAAE,CAAC;AAFQ,CAAf;AAKA,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBb,KAAK,CAACc,QAAN,CAAe,IAAf,CAAtB;;AAEA,MAAMC,MAAM,GAAIH,GAAD,IAAS;AACvB,QAAMI,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,YAAvB,EAAf;AACAR,EAAAA,GAAG,CAACS,SAAJ,CAAcL,MAAd;AACAH,EAAAA,MAAM,CAACD,GAAD,CAAN;AACA,CAJD;;AAMA,MAAMU,SAAS,GAAIV,GAAD,IAAS;AAC1BC,EAAAA,MAAM,CAAC,IAAD,CAAN;AACA,CAFD;;AAIA,OAAO,MAAMU,GAAN,SAAkBvB,KAAK,CAACwB,SAAxB,CAAkC;AAExCC,EAAAA,MAAM,GAAG;AACR,WACC,MAAC,UAAD;AAAY,MAAA,gBAAgB,EAAC,yCAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,MAAC,SAAD;AACC,MAAA,iBAAiB,EAAEnB,cADpB;AAEC,MAAA,MAAM,EAAEG,MAFT;AAGC,MAAA,IAAI,EAAE,EAHP;AAIC,MAAA,MAAM,EAAEM,MAJT;AAKC,MAAA,SAAS,EAAEO,SALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQC,2BARD,CADD,CADD;AAcA;;AAjBuC;;AAoBzC,MAAMI,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACNxB,IAAAA,QAAQ,EAAED,kBAAkB,CAACC,QAAD,EAAWwB,QAAX;AADtB,GAAP;AAGA,CAJD;;AAMA,eAAe1B,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkCH,GAAlC,CAAf","sourcesContent":["declare global {\n\tinterface Window {\n\t\tgoogle: any\n\t}\n}\n\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport { wrapper } from \"../store/store\"\nimport { bindActionCreators } from \"redux\"\nimport { addCount } from \"../store/count/action\"\nimport { GoogleMap, LoadScript } from \"@react-google-maps/api\"\n\nconst containerStyle = {\n\twidth: \"400px\",\n\theight: \"400px\",\n}\n\nconst center = {\n\tlat: -3.745,\n\tlng: -38.523,\n}\n\nconst [map, setMap] = React.useState(null)\n\nconst onLoad = (map) => {\n\tconst bounds = new window.google.maps.LatLngBounds()\n\tmap.fitBounds(bounds)\n\tsetMap(map)\n}\n\nconst onUnmount = (map) => {\n\tsetMap(null)\n}\n\nexport class Map extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<LoadScript googleMapsApiKey=\"AIzaSyAzNAcbkbNofJb40BYJ75D1WnYtQ_LbZr4\">\n\t\t\t\t<GoogleMap\n\t\t\t\t\tmapContainerStyle={containerStyle}\n\t\t\t\t\tcenter={center}\n\t\t\t\t\tzoom={10}\n\t\t\t\t\tonLoad={onLoad}\n\t\t\t\t\tonUnmount={onUnmount}\n\t\t\t\t>\n\t\t\t\t\t{/* Child components, such as markers, info windows, etc. */}\n\t\t\t\t\t<></>\n\t\t\t\t</GoogleMap>\n\t\t\t</LoadScript>\n\t\t)\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\taddCount: bindActionCreators(addCount, dispatch),\n\t}\n}\n\nexport default connect(null, mapDispatchToProps)(Map)\n"]},"metadata":{},"sourceType":"module"}